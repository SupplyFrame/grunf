{"name":"Grunf","tagline":"simple clojure-based http monitoring tool","body":"# grunf 0.2.10 (Alpha)\r\n\r\n(simple clojure-based http monitoring tool)\r\n\r\n## Install\r\n\r\n1. Clone the project to your target machine `git clone https://github.com/SupplyFrame/grunf`\r\n\r\n2. Install leiningen if you don't have it on your target machine. you can either\r\n    1. Use the package manager to install it, ex `sudo apt-get install leiningen`\r\n    2. Download [the script](https://raw.github.com/technomancy/leiningen/stable/bin/lein) and put it in your path (ie. `/usr/local/bin`), then `chmod 755 ~/usr/local/bin/lein`.\r\n\r\n3. In the grunf source code directory, run `lein deps` to install all the dependency libraries.\r\n\r\n4. Checkout [graphite setup guide][] on our wiki!\r\n\r\n[graphite setup guide]: https://github.com/SupplyFrame/grunf/wiki/graphite-on-ubuntu\r\n\r\n\r\n## Usage\r\n\r\nread config file and log in console.\r\n```\r\nlein run --log-level info --config conf.example.clj\r\n```\r\n\r\nSend events to graphite\r\n```\r\nlein run --config conf.example.clj --graphite-host localhost\r\n```\r\n\r\nLog in file `logs/foo.log`. Note `lein trampoline` let you send lein process to background without pausing the program.\r\n\r\n```\r\nmkdir logs\r\nlein trampoline run --log logs/foo.log -c conf.example.clj &\r\ntail -f logs/foo.log\r\n```\r\n\r\nRead smtp config, will send mails when receive error\r\n```\r\nlein run -c conf.example.clj -s smtp.example.clj\r\n```\r\n\r\nexport csv in logs/bar.csv\r\n```\r\nlein run -c conf.example.clj --csv logs/bar.csv\r\n```\r\n\r\n## Command line options\r\n\r\nThe command line options for grunf are:\r\n\r\n```\r\nUsage:\r\n\r\n Switches               Default  Desc\r\n --------               -------  ----\r\n -c, --config                    Path to the config file\r\n --log                           log path for log4j. If not specified, log to console \r\n --log-level            debug    log level for log4j, (fatal|error|warn|info|debug)\r\n --graphite-host                 Graphite server host\r\n --graphite-port        2003     Graphite server port\r\n --hostname             127.0.0.1  This server's hostname\r\n --csv                             csv log path\r\n --interval             60000      Default interval for each url request\r\n --user-agent           Grunf      Default user agent string\r\n --timeout              6000       Default timeout per request\r\n -s, --smtp-config                 Path to smtp config file \r\n -h, --no-help, --help  false    Print this message\r\n```\r\n\r\n## Configuration files format\r\n\r\nThe configuration file format for `conf.example.clj` is\r\n\r\n```clj\r\n[{:url \"http://www.yahoo.com/\"\r\n  :interval 1000                      ;; optional\r\n  :validator #(re-find #\"yahoo\" %)    ;; optional\r\n  :http-options {:timeout 2000        ;; :http-options itself is also optional \r\n                 :user-agent \"Mozilla\"}\r\n  :graphite-ns \"com.yahoo.www\"        ;; defualt to reverse domain name\r\n  }\r\n  {:url \"http://www.google.com/?search=abc\"\r\n   :name \"search\"                     ;; append to graphite namespace\r\n                                      ;; in this case it would be\r\n                                      ;; \"com.google.www.search\"\r\n  }      ;; only url is required\r\n]\r\n```\r\n\r\nThe smtp configuration file for `smtp.example.clj` is\r\n\r\n```clj\r\n^{:host \"smtp.gmail.com\"\r\n  :user \"example@gmail.com\"\r\n  :pass \"password\"\r\n  :port 1234\r\n  :tls true\r\n  }\r\n{:from \"sysalerts@example.com\"\r\n :to [\"user1@gmail.com\" \"user2@gmail.com\"]\r\n :subject \"Will be overwirtten by grunf!\"\r\n :body \"Will be overwritten by grunf!\"\r\n }\r\n```\r\n\r\nFor full documentaion of SMTP setup, please visit [postal -- internet email library for clojure](https://github.com/drewr/postal).\r\n\r\n## Output format\r\n\r\n### CSV\r\n\r\nThe CSV fields are\r\n\r\n```\r\nHH:MM:ss,SSS,*log type*,*http status*,*url*,*response time (milliseconds)*\r\n```\r\n\r\n## Note\r\n\r\nThis tool is still in experimental status, but all the example configs should work just fine.\r\n\r\n## TODO\r\n\r\n\r\n1. Refactor to make it testable (and more funtional idiomatic).\r\n\r\n1. Tutorial of writing verification in configuration file.\r\n\r\n## License\r\n\r\nDistributed under the Eclipse Public License, the same as Clojure.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}